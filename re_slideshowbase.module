<?php
// $Id$

/**
 * @file
 * This file provides theming functions and other logic for the re_slideshowbase
 * module.
 *
 * @todo Move preprocess_views_view() function to the feature that provides the
 *       view!
 * @todo Move the re_slideshowbase_debug setting to the feature as well (it needs
 *       the feature to work, but the module itself doesn't).
 */


/**
 * Configuration form for administrators:
 */
function re_slideshowbase_admin() {
  $path_to_module = drupal_get_path('module', 're_slideshowbase');
  $form = array();
  $form['re_slideshowbase_libraries'] = array(
    '#type' => 'fieldset',
    '#title' => t('RE Slideshow Base library settings'),
    '#description' => t('Settings related to external javascript libraries used by the RE Slideshow Base module'),
    '#weight' => 5,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['re_slideshowbase_libraries']['re_slideshowbase_library'] = array(
    '#type' => 'select',
    '#title' => t('Available libraries'),
    '#description' => t("The libraries in this list are available for use on this site. Only one library can be used per site. For information about creating libraries to extend the base module see the module's !help-page or the !readme-file.", array('!help-page' => l('help page', 'admin/help/re_slideshowbase'), '!readme-file' => l('README file', $path_to_module .'/README.txt'))),
    '#options' => re_slideshowbase_register_libraries(),
    '#weight' => 5,
    '#default_value' => variable_get('re_slideshowbase_library', 'none'),
    '#required' => TRUE,
  );
  $form['re_slideshowbase_libraries']['re_slideshowbase_libraries_only'] = array(
    '#type' => 'checkbox',
    '#title' => t('Include Libraries Only'),
    '#description' => t('Forces library modules to include only javascript library files and not their custom javascripts. If this module is <em>not</em> being used with the RE Slideshow feature, this box should be checked.'),
    '#weight' => 10,
    '#default_value' => variable_get('re_slideshowbase_libraries_only', (module_exists('re_slideshow') ? 0 : 1)),
  );
  $form['re_slideshowbase_libraries']['re_slideshowbase_debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Debug Mode'),
    '#description' => t('In Debug Mode, the slideshow will display a Drupal status message indicating which library module is in use. The message is only visible to users with the "administer re_slideshowbase" permission.'),
    '#weight' => 15,
    '#default_value' => variable_get('re_slideshowbase_debug', 0),
  );
  re_slideshowbase_register_libraries();
  return system_settings_form($form);
} // re_slideshowbase_admin()


/**
 * Implementation of hook_help().
 */
function re_slideshowbase_help($path, $arg) {
  $path_to_module = drupal_get_path('module', 're_slideshowbase');
  switch ($path) {
    case 'admin/help#re_slideshowbase':
      $output = '<p>'. t("The RE Slideshow Base module provides javascript slideshow libraries for use in the RE Slideshow Feature. The main module can be extended by creating very small library modules that provide additional javascript tools. For information about adding library modules for use with RE Slideshow Base, please consult the module's !readme-file.", array('!readme-file' => l('README file', $path_to_module .'/README.txt'))) .'</p>';
      break;
  }
  return $output;
} // re_slideshowbase_help()


/**
 * Load all the necessary files to allow us to play slides.
 *
 * @todo We need to handle the case where the $library_data variable comes up
 *       empty.
 * @todo We need to show different messages for users with different permissions
 */
function re_slideshowbase_load_resources() {
  // We need to know where the module is and where the libraries folder is:
  $path_to_module = drupal_get_path('module', 're_slideshowbase');
  // Decide what to do based on which module is in use:
  $library_name = variable_get('re_slideshowbase_library', 'none');
  // Find out if we're supposed to include only the library files:
  $include_libraries_only = variable_get('re_slideshowbase_libraries_only', (module_exists('re_slideshow') ? 0 : 1));
  // Which library has been asked for?
  switch ($library_name) {
    case 'none': // If there isn't one...
      drupal_set_message(t('No slideshow library has been set for the RE Slideshow Base module. You can choose one at the !settings-page. If you do not have access to this page, please contact an administrator.', array('!settings-page' => l('RE Slideshow Base settings page', 'admin/settings/re_slideshowbase'))), 'error');
      break;
    default: // But if there is one...or more...
      if ($library_data = variable_get('re_slideshowbase:'. $library_name, 'none')) {
        // Loop through the available js files and add them:
        foreach ($library_data['js'] as $file) {
          if (!$include_libraries_only || (strpos($file, $library_name .'.js') === FALSE && $file != $path_to_module .'/js/re_slideshowbase.js')) { // DeMorgan!
            drupal_add_js($file, 'module');
          }
        }
        // Loop through the available css files and add them:
        foreach ($library_data['css'] as $file) {
          drupal_add_css($file, 'module');
        }
      }
      break;
  }
  // Finally, load the base css--unlike the javascript files, developers can
  // override this in their theme info files:
  drupal_add_css($path_to_module .'/css/re_slideshowbase.css', 'module');
} // re_slideshowbase_load_resources()


/**
 * Implementation of hook_menu().
 */
function re_slideshowbase_menu() {
  $items = array();
  $items['admin/settings/re_slideshowbase'] = array(
    'title' => 'RE Slideshow Base',
    'description' => 'Configuration form for for RE Slideshow Base module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('re_slideshowbase_admin'),
    'access arguments' => array('administer re_slideshowbase'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
} // re_slideshowbase_menu()


/**
 * Implementation of hook_perm().
 */
function re_slideshowbase_perm() {
  return array('administer re_slideshowbase');
} // re_slideshowbase_perm()


/**
 * Implementation of template_preprocess_views_view().
 *
 * This function handles any preprocessing required for individual views. In
 * this instance, we're really only interested in the re_slideshow view.
 */
function re_slideshowbase_preprocess_views_view(&$variables) {
  // Check to see that this view is the re_slideshow view:
  if ($variables['view']->name == 're_slideshowbase') {
    // We're in the view, now what?
    // Load whatever resources we need:
    re_slideshowbase_load_resources();
    //
    // We'd also like to figure out what display we're in:
    $current_display = $variables['view']->current_display;
    // If we're not currently in the weight view, and the user has the appropriate
    // permissions:
    if ($current_display != 'page_1' && user_access('assign node weight') && user_access('edit any re_slide content')) {
      // Display a message advertising the sorting view:
      $sorting_message = t('You can change the order of these slides on the !sorting-page.', array('!sorting-page' => l('sorting page', $variables['view']->display['page_1']->display_options['path'])));
      drupal_set_message($sorting_message, 'status', FALSE);
    }
    // Display a message indicating which library is in use--if the user is
    // sufficiently trustworthy :)
    if (user_access('administer re_slideshowbase')) {
      $library_name = variable_get('re_slideshowbase_library', 'none');
      if (variable_get('re_slideshowbase_debug', 0) && $library_name != 'none') {
        $debug_message = t('The current slideshow library is provided by the %library module. You can change this on the !settings-page.', array('%library' => $library_name, '!settings-page' => l('RE Slideshow Base settings page', 'admin/settings/re_slideshowbase')));
        drupal_set_message($debug_message, 'status', TRUE);
      }
    }
  }
} // re_slideshowbase_preprocess_views_view()


/**
 * Registers available libraries provided by other modules:
 */
function re_slideshowbase_register_libraries() {
  // Find out about all the slideshow libraries available:
  $libraries = module_invoke_all('define_re_slideshowbase_library');
  // Then set variables for each of them, and collect the names only in an array
  // suitable for use in a forms api select:
  $library_options = array('' => 'None');
  foreach ($libraries as $library => $files) {
    variable_set('re_slideshowbase:'. $library, $files);
    $library_options[$library] = $files['name'];
  }
  return $library_options;
} // re_slideshowbase_register_library()